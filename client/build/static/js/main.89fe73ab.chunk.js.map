{"version":3,"sources":["views/Pets.js","views/Pet.js","views/CreatePet.js","views/UpdatePet.js","App.js","serviceWorker.js","index.js"],"names":["Pets","pets","deletePet","className","to","map","pet","index","key","name","type","onClick","id","_id","navigate","Pet","updatePet","useState","setPet","useEffect","axios","get","then","response","console","log","data","catch","err","description","delete","CreatePet","addPet","setName","setType","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","nameerror","setNameError","typeerror","setTypeError","descriptionerror","setDescriptionError","onSubmit","e","preventDefault","post","errors","nameError","properties","message","typeError","descriptionError","style","color","onChange","target","value","UpdatePet","updatedPet","put","App","setPets","getPetAPI","sorted","givenPets","sort","a","b","localeCompare","path","filter","newPets","i","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.89fe73ab.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { navigate,Link } from '@reach/router'\r\nimport axios from 'axios';\r\n\r\nconst Pets=({pets,deletePet})=>{\r\n\r\n\r\n    const deleteHandler=(id)=>{\r\n        axios.delete(`http://localhost:8000/api/pets/${id}`)\r\n            .then(response => {\r\n                console.log(response);\r\n                deletePet(id);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            \r\n\r\n    }\r\n    \r\n    const editHandler=(id)=>{\r\n        navigate(`/pets/edit/${id}`)\r\n\r\n    }\r\n    const detailHandler=(id)=>{\r\n        navigate(`/pets/${id}`)\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"home\">\r\n                <Link to=\"/pets/create\">Add A Pet!</Link>\r\n            </div>\r\n            <div className=\"pet\">\r\n            {pets.map((pet,index)=>{\r\n                return(\r\n                <div key={index}>\r\n                    <table>\r\n                        <tr>\r\n                            <th>Pet Name:</th>\r\n                            <th>Type:</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{pet.name}</td>\r\n                            <td>{pet.type}</td>\r\n                            <td>\r\n                                <button onClick={()=>{detailHandler(pet._id)}}>Details</button>\r\n                                <button onClick={()=>{editHandler(pet._id)}}>Edit</button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                </div>\r\n                )\r\n            })\r\n            }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Pets;","import React,{useState,useEffect} from 'react'\r\nimport { navigate,Link } from '@reach/router'\r\nimport axios from 'axios';\r\n\r\nconst Pet=({id,deletePet,updatePet})=>{\r\n    const[pet,setPet]=useState({})\r\n    \r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/pets/${id}`)\r\n        .then(response=>{\r\n        console.log(response.data);\r\n        setPet(response.data)\r\n        })\r\n        .catch(err=>{\r\n        console.log(err.response);\r\n        })\r\n    },[]);\r\n    \r\n    \r\n    const deleteHandler=()=>{\r\n        axios.delete(`http://localhost:8000/api/pets/${id}`)\r\n            .then(response => {\r\n                console.log(response);\r\n                deletePet(id);\r\n                navigate(\"/\");\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            \r\n    \r\n    }\r\n    \r\n    \r\n    \r\n    return(\r\n        <div>\r\n            <div className=\"home\">\r\n                <Link to=\"/\">Home</Link>\r\n            </div>\r\n            <div className=\"pet\">\r\n                \r\n                <h3>Pet Name:</h3>\r\n                <h2>{pet.name}</h2>\r\n                <p>Pet Type:</p>\r\n                <p>{pet.type}</p>\r\n                <p>Pet Description:</p>\r\n                <p>{pet.description}</p>\r\n                <button onClick={deleteHandler}>Adopt {pet.name}</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Pet;","import React,{useState,useEffect} from 'react'\r\nimport { navigate,Link } from '@reach/router'\r\nimport axios from 'axios';\r\n\r\nconst CreatePet=({addPet})=>{\r\n    const [name,setName]=useState(\"\");\r\n    const [type,setType]=useState(\"\");\r\n    const [description,setDescription]=useState(\"\");\r\n    const[skill1,setSkill1]=useState(\"\")\r\n    const[skill2,setSkill2]=useState(\"\")\r\n    const[skill3,setSkill3]=useState(\"\")\r\n    const [nameerror,setNameError]=useState(\"\");\r\n    const [typeerror,setTypeError]=useState(\"\");\r\n    const [descriptionerror,setDescriptionError]=useState(\"\");\r\n\r\n    const formHandler=(e)=>{\r\n        e.preventDefault();\r\n        let pet={\r\n            name:name,\r\n            type:type,\r\n            description:description,\r\n            skill1:skill1,\r\n            skill2:skill2,\r\n            skill3:skill3\r\n\r\n        }\r\n        axios.post(\"http://localhost:8000/api/pets\",pet)\r\n        .then(response=>{\r\n            console.log(response);\r\n            addPet(response.data);\r\n            setNameError('');\r\n            setTypeError('');\r\n            setDescriptionError('');\r\n            navigate(\"/\");\r\n\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response.data.errors)\r\n            console.log(err.response)\r\n            let nameError='';\r\n            nameError=err.response.data.errors.name.properties.message;\r\n            let typeError='';\r\n            typeError=err.response.data.errors.type.properties.message;\r\n            let descriptionError='';\r\n            descriptionError=err.response.data.errors.description.properties.message;\r\n            setNameError(nameError);\r\n            setDescriptionError(descriptionError);\r\n            setTypeError(typeError);\r\n        })\r\n\r\n    }\r\n    console.log(descriptionerror)\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"home\">\r\n                <Link to=\"/\">Home</Link>\r\n            </div>\r\n            <div className=\"pet\">\r\n            <h1>Add A Pet!</h1>\r\n            <form onSubmit={formHandler}>\r\n                <label>Name:</label>\r\n                {nameerror!=\"\" &&\r\n                <p style={{color:'red'}}>{nameerror}</p>\r\n                }\r\n                <input type=\"text\" onChange={(e)=>{setName(e.target.value)}}></input>\r\n                <br/>\r\n                <label>Pet Type:</label>\r\n                {typeerror!=\"\" &&\r\n                <p style={{color:'red'}}>{typeerror}</p>\r\n                }\r\n                <input type=\"text\" onChange={(e)=>{setType(e.target.value)}}></input>\r\n                <br/>\r\n                <label>Pet Description:</label>\r\n                {descriptionerror!=\"\" &&\r\n                <p style={{color:'red'}}>{descriptionerror}</p>\r\n                }\r\n                <input type=\"text\" onChange={(e)=>{setDescription(e.target.value)}}></input>\r\n                <br/>\r\n                <label>Pet Skill 1:</label>\r\n                <input type=\"text\" onChange={(e)=>{setSkill1(e.target.value)}}></input>\r\n                <br/>\r\n                <label>Pet Skill 2:</label>\r\n                <input type=\"text\" onChange={(e)=>{setSkill2(e.target.value)}}></input>\r\n                <br/>\r\n                <label>Pet Skill 3:</label>\r\n                <input type=\"text\" onChange={(e)=>{setSkill3(e.target.value)}}></input>\r\n                <br/>\r\n                <input type=\"submit\"/>\r\n            </form>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default CreatePet;","import React,{useState,useEffect} from 'react'\r\nimport { navigate,Link } from '@reach/router'\r\nimport axios from 'axios';\r\n\r\nconst UpdatePet=({id,updatePet})=>{\r\n    const [name,setName]=useState(\"\");\r\n    const [type,setType]=useState(\"\");\r\n    const [description,setDescription]=useState(\"\");\r\n    const[skill1,setSkill1]=useState(\"\")\r\n    const[skill2,setSkill2]=useState(\"\")\r\n    const[skill3,setSkill3]=useState(\"\")\r\n    \r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/pets/${id}`)\r\n        .then(response=>{\r\n        console.log(response.data);\r\n        setName(response.data.name)\r\n        setType(response.data.type)\r\n        setDescription(response.data.description)\r\n        setSkill1(response.data.skill1)\r\n        setSkill2(response.data.skill2)\r\n        setSkill3(response.data.skill3)\r\n        })\r\n        .catch(err=>{\r\n        console.log(err.response);\r\n        })\r\n    },[]);\r\n\r\n\r\n    const clickHandler =(e)=>{\r\n        e.preventDefault()\r\n        let updatedPet={\r\n            name:name,\r\n            type:type,\r\n            description:description,\r\n            skill1:skill1,\r\n            skill2:skill2,\r\n            skill3:skill3\r\n\r\n        }\r\n\r\n        axios.put(`http://localhost:8000/api/pets/${id}`,updatedPet)\r\n        .then(response => {\r\n            console.log(response);\r\n            updatePet(id,updatedPet);\r\n            navigate(\"/\");\r\n            \r\n    \r\n            // updateColor(id, {name: name, hex: hex});\r\n            \r\n        })\r\n        .catch(err => {\r\n    \r\n            // const errorsArray = [];\r\n            // for(const key of Object.keys(err.response.data.errors)){\r\n            //     errorsArray.push(err.response.data.errors[key].properties.message);\r\n            // };\r\n    \r\n            // setErrors(errorsArray);\r\n        })\r\n        \r\n    }\r\n    console.log(\"type\",type)\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"home\">\r\n                <Link to=\"/\">Home</Link>\r\n            </div>\r\n            <div className=\"pet\">\r\n                <h1>Edit Pet</h1>\r\n                <form  onSubmit={clickHandler} >\r\n                <label >Pet Name:</label>\r\n                <input  type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                <br/>\r\n                <label >Type:</label>\r\n                <input  type=\"text\" value={type} onChange={(e) => setType(e.target.value)} />\r\n                <br/>\r\n                <label >Description:</label>\r\n                <input  type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                <br/>\r\n                <label >Skill 1:</label>\r\n                <input  type=\"text\" value={skill1} onChange={(e) => setSkill1(e.target.value)} />\r\n                <br/>\r\n                <label >Skill 2:</label>\r\n                <input  type=\"text\" value={skill2} onChange={(e) => setSkill2(e.target.value)} />\r\n                <br/>\r\n                <label >Skill 3:</label>\r\n                <input  type=\"text\" value={skill3} onChange={(e) => setSkill3(e.target.value)} />\r\n                <br/>\r\n                <input type=\"submit\"/>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default UpdatePet;","import React, {useEffect, useState} from 'react';\nimport { Router,navigate } from '@reach/router';\nimport axios from 'axios';\nimport './App.css';\nimport Pets from './views/Pets';\nimport Pet from './views/Pet';\nimport CreatePet from './views/CreatePet';\nimport UpdatePet from './views/UpdatePet';\n\nfunction App() {\n  const [pets,setPets]=useState([])\n\n  useEffect(()=>{\n    getPetAPI();\n  },[]);\n  \n  const sorted=(givenPets)=>{\n\n    return givenPets.sort((a, b) => a.type.localeCompare(b.type))\n  \n\n  }\n  const getPetAPI=()=>{\n    axios.get(\"http://localhost:8000/api/pets\")\n    .then(response=>{\n      console.log(response.data);\n      setPets(sorted(response.data));\n    })\n    .catch(err=>{\n      console.log(err.response);\n    })\n  }\n\n  const deletePet =(id)=>{\n    setPets(sorted(pets.filter(pet => pet._id !== id)));\n  }\n  const updatePet=(id,pet)=>{\n    let index=0;\n    for (let i=0;i<pets.length;i++){\n      if (pets[i]._id==id){\n        index=i;\n      }\n    }\n    let newPets=[...pets];\n    newPets[index].name=pet.name;\n    setPets(sorted(newPets));\n  }\n\n  const addPet=(pet)=>{\n    let newPets=[...pets,pet]\n    setPets(sorted(newPets));\n\n  }\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter</h1>\n      <div>\n\n      </div>\n      <div>\n        <Router>\n          <Pets path=\"/\" pets={pets}></Pets>\n          <Pet path=\"/pets/:id\"  deletePet={deletePet} ></Pet>\n          <CreatePet path=\"/pets/create\" addPet={addPet}></CreatePet>\n          <UpdatePet path=\"/pets/edit/:id\"  updatePet={updatePet}></UpdatePet>\n          \n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}